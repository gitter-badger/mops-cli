#!/usr/bin/env node --harmony

'use strict';

var program = require('commander');
var MMS = require('node-mms-client');
var q = require('q');
var fs = require('fs');

var optionDescriptions = require('../lib/optionDescriptions');
var MopsConfig = require('../lib/util/MopsConfig');
var promptUtil = require('../lib/util/promptUtil');

program
  .option('-g, --groupId [groupId]', optionDescriptions.GROUP_ID)
  .option('-f, --file [filename]', optionDescriptions.FILE)
  .parse(process.argv);

promptUtil.getRequiredOptions({
    properties: {
        groupId: {
            message: optionDescriptions.GROUP_ID,
            required: true
        },
        file: {
            message: optionDescriptions.FILE,
            required: true
        }
    }
}, program.opts()).then(function(options) {
    createAlertConfigs(options);
}).fail(function(err) {
    console.error('Unable to retrieve required options', err);
});

function createAlertConfigs(options) {
    var inputConfig = JSON.parse(fs.readFileSync(options.file, 'utf8'));
    var config = new MopsConfig();
    writeAlertsConfig(options.groupId, config.get('host'), config.get('user'), config.get('apiKey'), inputConfig);
}

function writeAlertsConfig(groupId, host, user, apiKey, inputConfig) {
    var mms = new MMS({
        username: user,
        apiKey: apiKey,
        host: host
    });
    inputConfig['results'].forEach(function(alert) {
        alert = removeUnnecessaryFields(alert);
        alert.groupId = groupId;
        var insertAlert = mms.post('/groups/'+groupId+'/alertConfigs', alert, function(err, response) {
            console.log('Error Posting alert config: ', err);
            console.log('Response Posting alert config: ', response);
        });
        q.all(insertAlert).then(
            function(insertAlert) {
                console.log('Alert inserted');
            },
            function(error) {
                console.log('Alert NOT inserted: ', error);
            }
        );
    });
}

function removeUnnecessaryFields(alert) {
    delete alert.created;
    delete alert.updated;
    delete alert.id;
    delete alert.links;
    return alert;
}
