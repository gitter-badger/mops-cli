#!/usr/bin/env node --harmony

'use strict';

var fs = require('fs');

var program = require('commander');
var q = require('q');

var optionDescriptions = require('../lib/optionDescriptions');
var MopsConfig = require('../lib/util/MopsConfig');
var mmsUtil = require('../lib/util/mmsUtil');
var promptUtil = require('../lib/util/promptUtil');
var editorUtil = require('../lib/util/editorUtil');

var config = new MopsConfig();
var mms = mmsUtil.getClient(config);

program
  .option('-g, --groupId [groupId]', optionDescriptions.GROUP_ID)
  .parse(process.argv);

promptUtil.getRequiredOptions({
    properties: {
        groupId: {
            message: optionDescriptions.GROUP_ID,
            required: true
        }
    }
}, program.opts(), config).then(function(options) {
    editAutomationConfig(options);
}).fail(function(err) {
    console.error('Unable to retrieve required options', err);
});

function editAutomationConfig(options) {
    var groupId = options.groupId;
    mms.get('/groups/'+groupId+'/automationConfig').then(
        function(response) {
            editorUtil.openJSONInEditor(response).then(
                function(response) {
                    mms.put('/groups/'+groupId+'/automationConfig', response).then(
                        function() {
                            console.log('AutomationConfig published');
                        },
                        function() {
                            console.error('Error publishing AutomationConfig', arguments);
                        }
                    );
                },
                function(err) {
                    console.error('Error editing with EDITOR', err);
                }
            );
        },
        function(err) {
            console.error('Error retrieving AutomationConfig', err);
        }
    );
}
