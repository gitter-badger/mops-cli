#!/usr/bin/env node --harmony

'use strict';

var fs = require('fs');
var program = require('commander');
var MMS = require('node-mms-client');

var optionDescriptions = require('../lib/optionDescriptions');
var MopsConfig = require('../lib/util/MopsConfig');
var promptUtil = require('../lib/util/promptUtil');

program
  .option('-n, --groupName [groupName]', optionDescriptions.GROUP_NAME)
  .parse(process.argv);

promptUtil.getRequiredOptions({
    properties: {
        groupName: {
            message: optionDescriptions.GROUP_NAME,
            required: true
        }
    }
}, program.opts()).then(function(options) {
    deleteGroup(options);
}).fail(function(err) {
    console.error('Unable to retrieve required options', err);
});

function deleteGroup(options) {
    var groupName = options.groupName;
    var config = new MopsConfig();
    var mms = new MMS({
        username: config.get('user'),
        apiKey: config.get('apiKey'),
        host: config.get('host')
    });
    mms.groups().list().then(
        function(resp) {
            var found = resp.results.find(function(element) {
                return element.name === groupName;
            });

            if (found) {
                mms.groups(found.id).delete().then(function() {
                    console.log('Sent delete request to group with name ' + groupName);
                });
            } else {
                console.error('Group with name ' + groupName + ' not found');
            }
        },
        function(err) {
            console.error('Error getting groups', err);
        }
    );
}
