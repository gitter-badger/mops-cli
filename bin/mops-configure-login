#!/usr/bin/env node --harmony

'use strict';

var program = require('commander');

var optionDescriptions = require('../lib/optionDescriptions');
var MopsConfig = require('../lib/util/MopsConfig');
var mmsUtil = require('../lib/util/mmsUtil');
var promptUtil = require('../lib/util/promptUtil');
var Schema = require('../lib/schema.js');

var config = new MopsConfig();

program
  .option('-h, --host [host]', optionDescriptions.HOST)
  .option('-p, --port [port]', optionDescriptions.PORT)
  .option('-P, --protocol [protocol]', optionDescriptions.PROTOCOL)
  .option('-u, --user [username]', optionDescriptions.USER)
  .option('-a, --apiKey [apiKey]', optionDescriptions.API_KEY)
  .parse(process.argv);

promptUtil.getRequiredOptions(Schema.Login, program.opts(), config).then(function(options) {
    config.set('host', options.host);
    config.set('port', options.port);
    config.set('protocol', options.protocol);
    config.set('user', options.user);
    config.set('apiKey', options.apiKey);
    config.save(function(err) {
        if (err) {
            console.log('Failed to update configuration file.');
        } else {
            var mms = mmsUtil.getClient(config);
            mms.root().info().then(function(response) {
    	        console.log('Login successful');
            }).fail(function(err) {
    	        console.error("Login failed", err);
            });
        }
    });
}).fail(function(err) {
    console.error('Unable to retrieve required options.', err);
});
