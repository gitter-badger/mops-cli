#!/usr/bin/env node --harmony

'use strict';

var fs = require('fs');

var program = require('commander');
var MMS = require('node-mms-client');
var q = require('q');
var tmp = require('tmp');

var optionDescriptions = require('../lib/optionDescriptions');
var MopsConfig = require('../lib/util/MopsConfig');
var promptUtil = require('../lib/util/promptUtil');
var editorUtil = require('../lib/util/editorUtil');

var config = new MopsConfig();
var mms = new MMS({
    username: config.get('user'),
    apiKey: config.get('apiKey'),
    host: config.get('host')
});

program
  .option('-g, --groupId [groupId]', optionDescriptions.GROUP_ID)
  .option('-i, --alertConfigId [alertConfigId]', optionDescriptions.ALERT_CONFIG_ID)
  .parse(process.argv);

promptUtil.getRequiredOptions({
    properties: {
        groupId: {
            message: optionDescriptions.GROUP_ID,
            required: true
        },
        alertConfigId: {
            message: optionDescriptions.ALERT_CONFIG_ID,
            required: true
        }
    }
}, program.opts(), config).then(function(options) {
    editAlertConfig(options);
}).fail(function(err) {
    console.error('Unable to retrieve required options', err);
});

function editAlertConfig(options) {
    var groupId = options.groupId;
    var alertConfigId = options.alertConfigId;
    mms.get('/groups/'+groupId+'/alertConfigs/'+alertConfigId).then(
        function(response) {
            editorUtil.openJSONInEditor(response).then(
                function(response) {
                    mms.put('/groups/'+groupId+'/alertConfigs/'+alertConfigId, JSON.parse(response)).then(
                        function() {
                            console.log('AlertConfig published');
                        },
                        function(err) {
                            console.error('Error publishing AlertConfig', err);
                        }
                    );
                },
                function(err) {
                    console.error('Error editing with EDITOR', err);
                }
            );
        },
        function(err) {
            console.error('Error retrieving AlertConfig', err);
        }
    );
}
